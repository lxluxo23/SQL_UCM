DROP TABLE CURSO_ALUMNO;
DROP TABLE EVALUACIONES;
DROP TABLE CURSOS;
DROP TABLE PROFESORES;
DROP TABLE ALUMNOS;
DROP TABLE ADMINISTRADORES;
DROP TABLE USUARIO;

CREATE TABLE USUARIO(
  rut varchar2(10) not null,
  tipo varchar2(10) not null check(tipo='ALUMNO' or tipo='PROFESOR' or tipo='DIRECTOR' or tipo='SECRETARIA'),
  nombre varchar2(30) not null,
  apellido1 varchar2(30) not null,
  apellido2 varchar2(30) not null,
  correo varchar2(60) not null
);

CREATE TABLE ALUMNOS(
  rut varchar2(10) not null unique,
  tipo varchar2(10) default 'ALUMNO',
  edad number check(edad between 0 AND 120),
  ingreso number check(ingreso between 2006 AND 2018)
);

ALTER TABLE ALUMNOS ADD estado varchar2(20) default 'ACTIVO';
--select * from alumnos;

CREATE TABLE PROFESORES(
  rut varchar2(10) not null unique,
  tipo varchar2(10) default 'PROFESOR' check(tipo='PROFESOR'),
  edad number check(edad>0 AND edad<120),
  sueldo number check(sueldo>0 AND sueldo<9999999),
  year_service number check(year_service>0),
  sindicalizado varchar2(2) default 'NO' check(sindicalizado='SI' OR sindicalizado='NO') 
);

CREATE TABLE ADMINISTRADORES(
  rut varchar2(10) not null unique,
  tipo varchar2(10) check(tipo='DIRECTOR' or tipo='SECRETARIA'),
  last_log date default sysdate
);

CREATE TABLE CURSOS(
  codigo varchar2(10) not null,
  nombre varchar2(40) not null,
  descripcion varchar2(100),
  rut_usuario varchar2(10)
);

CREATE TABLE CURSO_ALUMNO(
  codigo varchar2(10) not null,
  rut_usuario varchar2(10) not null
);

CREATE TABLE EVALUACIONES(
  codigo_curso varchar2(10) not null,
  nombre varchar2(30) not null,
  descripcion varchar2(100),
  tipo varchar2(10) check(tipo='PRUEBA' or tipo='TRABAJO' or tipo='EXAMEN' or tipo='CONTROL'),
  fecha_inicio date,
  fecha_fin date
);

ALTER TABLE EVALUACIONES ADD rut_usuario varchar2(10);
ALTER TABLE EVALUACIONES ADD rol varchar2(10) check(rol='DIRECTOR' OR rol='SECRETARIA' OR rol='PROFESOR');

--DEFINIMOS LAS PRIMARY KEY DE TODAS LAS TABLAS.
ALTER TABLE USUARIO ADD CONSTRAINT PK_USUARIO PRIMARY KEY(rut,tipo);
ALTER TABLE ALUMNOS ADD CONSTRAINT PK_ALUMNO PRIMARY KEY(rut,tipo);
ALTER TABLE PROFESORES ADD CONSTRAINT PK_PROFE PRIMARY KEY(rut,tipo);
ALTER TABLE ADMINISTRADORES ADD CONSTRAINT PK_ADMIN PRIMARY KEY(rut,tipo);
ALTER TABLE CURSO_ALUMNO ADD CONSTRAINT PK_C_A PRIMARY KEY(codigo,rut_usuario);
ALTER TABLE CURSOS ADD CONSTRAINT PK_CURSOS PRIMARY KEY(codigo);
ALTER TABLE EVALUACIONES ADD CONSTRAINT PK_EVALUACIONES PRIMARY KEY(codigo_curso,nombre,fecha_inicio);

--DEFINIMOS LAS FOREIGN KEY PARA TODAS LAS TABLAS
ALTER TABLE ALUMNOS ADD CONSTRAINT FK_ALUMNO FOREIGN KEY(rut,tipo) REFERENCES USUARIO(rut,tipo) ON DELETE CASCADE;
ALTER TABLE PROFESORES ADD CONSTRAINT FK_PROFESOR FOREIGN KEY(rut,tipo) REFERENCES USUARIO(rut,tipo) ON DELETE CASCADE;
ALTER TABLE ADMINISTRADORES ADD CONSTRAINT FK_ADMINISTRADOR FOREIGN KEY(rut,tipo) REFERENCES USUARIO(rut,tipo) ON DELETE CASCADE;
ALTER TABLE CURSO_ALUMNO ADD CONSTRAINT FK_ALUMNO2 FOREIGN KEY(rut_usuario) REFERENCES ALUMNOS(rut) ON DELETE CASCADE;
ALTER TABLE CURSO_ALUMNO ADD CONSTRAINT FK_CURSO_ALUMNO FOREIGN KEY(codigo) REFERENCES CURSOS(codigo) ON DELETE CASCADE;
--ALTER TABLE CURSO_ALUMNO DROP CONSTRAINT FK_CURSO;
ALTER TABLE CURSOS ADD CONSTRAINT FK_CURSO FOREIGN KEY(rut_usuario) REFERENCES PROFESORES(rut) ON DELETE SET NULL;
ALTER TABLE EVALUACIONES ADD CONSTRAINT FK_EVALUACION FOREIGN KEY(codigo_curso) REFERENCES CURSOS(codigo) ON DELETE CASCADE;
--ALTER TABLE EVALUACIONES ADD CONSTRAINT FK_EVALUACION2 FOREIGN KEY(rut_usuario,rol) REFERENCES USUARIO(rut,tipo) ON DELETE CASCADE;


/*LA EJECUCIÓN DE LOS SIGUIENTES 3 PROCEDIMIENTOS DEBE REALIZARSE UNO POR UNO. NO TODOS JUNTOS O TIRARÁ ERROR*/

CREATE OR REPLACE PROCEDURE INSERTAR_ALUMNO(
  rut IN USUARIO.RUT%TYPE,
  tipo IN USUARIO.TIPO%TYPE,
  nombre IN USUARIO.NOMBRE%TYPE,
  apellido1 IN USUARIO.APELLIDO1%TYPE,
  apellido2 IN USUARIO.APELLIDO2%TYPE,
  correo IN USUARIO.CORREO%TYPE,
  edad IN ALUMNOS.EDAD%TYPE,
  ingreso IN ALUMNOS.INGRESO%TYPE,
  estado IN ALUMNOS.ESTADO%TYPE)
IS
BEGIN
  LOCK TABLE USUARIO IN ROW EXCLUSIVE MODE;
  INSERT INTO USUARIO VALUES(rut,tipo,nombre,apellido1,apellido2,correo);
  LOCK TABLE ALUMNOS IN ROW EXCLUSIVE MODE;
  INSERT INTO ALUMNOS(RUT,EDAD,INGRESO,ESTADO) VALUES(rut,edad,ingreso,estado);
  COMMIT;
  DBMS_OUTPUT.PUT_LINE('ALUMNO INGRESADO CON EXITO');
  EXCEPTION
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('ALGO PASO');
      ROLLBACK;
END;

CREATE OR REPLACE PROCEDURE INSERTAR_PROFESOR(
  rut IN USUARIO.RUT%TYPE,
  tipo IN USUARIO.TIPO%TYPE,
  nombre IN USUARIO.NOMBRE%TYPE,
  apellido1 IN USUARIO.APELLIDO1%TYPE,
  apellido2 IN USUARIO.APELLIDO2%TYPE,
  correo IN USUARIO.CORREO%TYPE,
  edad IN PROFESORES.EDAD%TYPE,
  sueldo IN PROFESORES.SUELDO%TYPE,
  year_service IN PROFESORES.YEAR_SERVICE%TYPE,
  sindicalizado IN PROFESORES.SINDICALIZADO%TYPE)
IS
BEGIN
  LOCK TABLE USUARIO IN ROW EXCLUSIVE MODE;
  INSERT INTO USUARIO VALUES(rut,tipo,nombre,apellido1,apellido2,correo);
  LOCK TABLE PROFESORES IN ROW EXCLUSIVE MODE;
  INSERT INTO PROFESORES(RUT,EDAD,SUELDO,YEAR_SERVICE,SINDICALIZADO) VALUES (rut,edad,sueldo,year_service,sindicalizado);
  COMMIT;
  DBMS_OUTPUT.PUT_LINE('PROFESOR INGRESADO CON EXITO');
  EXCEPTION
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('ALGO PASO');
      ROLLBACK;
END;

CREATE OR REPLACE PROCEDURE INSERTAR_ADMIN(
  rut IN USUARIO.RUT%TYPE,
  tipo IN USUARIO.TIPO%TYPE,
  nombre IN USUARIO.NOMBRE%TYPE,
  apellido1 IN USUARIO.APELLIDO1%TYPE,
  apellido2 IN USUARIO.APELLIDO2%TYPE,
  correo IN USUARIO.CORREO%TYPE)
IS
  last_log DATE := SYSDATE;
BEGIN
  LOCK TABLE USUARIO IN ROW EXCLUSIVE MODE;
  INSERT INTO USUARIO VALUES(rut,tipo,nombre,apellido1,apellido2,correo);
  LOCK TABLE ADMINISTRADORES IN ROW EXCLUSIVE MODE;
  INSERT INTO ADMINISTRADORES (RUT,TIPO,LAST_LOG) VALUES(rut,tipo,last_log);
  COMMIT;
  DBMS_OUTPUT.PUT_LINE('ADMINISTRADOR INGRESADO CON EXITO');
  EXCEPTION
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('ALGO PASO');
      ROLLBACK;
END;



select * from alumnos where estado like '%ACTIVO'

SELECT C.CODIGO, U.NOMBRE,A.INGRESO
FROM CURSO_ALUMNO C,ALUMNOS A,USUARIO U
WHERE A.ESTADO='ACTIVO'

AND A.RUT=U.RUT;
